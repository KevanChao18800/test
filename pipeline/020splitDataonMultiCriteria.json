{
	"name": "020splitDataonMultiCriteria",
	"properties": {
		"activities": [
			{
				"name": "InvoiceDataSink",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Create Table Invoice Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "TRUNCATE TABLE dbo.INVOICEDATA",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "YEAR",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "YEAR",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "MONTH",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "MONTH",
									"type": "Byte",
									"physicalType": "tinyint"
								}
							},
							{
								"source": {
									"name": "INVOICEID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "INVOICEID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "COUNTRY",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "COUNTRY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "REGION",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "REGION",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SALES",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "SALES",
									"type": "Decimal",
									"physicalType": "money",
									"scale": 4,
									"precision": 19
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "InvoiceDataEXCEL",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Create Table Invoice Data",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "LS_ASQL",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "DROP TABLE IF EXISTS INVOICEDATA\n\nCREATE TABLE INVOICEDATA(\n[YEAR] int, \n[MONTH] tinyint,\nINVOICEID varchar(20),\nCOUNTRY varchar(20),\nREGION varchar(20),\nSALES money\n)"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "GetCountryRegions",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "InvoiceDataSink",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT DISTINCT COUNTRY,REGION\nFROM INVOICEDATA\nORDER BY COUNTRY,REGION",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetCountryRegions",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetCountryRegions').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Set Country",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Countryppl020",
								"value": {
									"value": "@item().COUNTRY",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Region",
								"value": {
									"value": "@item().REGION",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set Country",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Set variable2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@replace(\nreplace(\n'SELECT [YEAR], [MONTH], INVOICEID,SALES FROM INVOICEDATA\nWHERE COUNTRY =''COUNTRYNAME'' AND REGION = ''REGIONNAME''',\n'COUNTRYNAME', variables('Country')),'REGIONNAME',variables('Region'))",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_COUNTRYREGIONS",
									"type": "DatasetReference",
									"parameters": {
										"ParamCountry": {
											"value": "@variables('Country')",
											"type": "Expression"
										},
										"ParamRegion": {
											"value": "@variables('Region')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"Countryppl020": {
				"type": "String"
			},
			"Region": {
				"type": "String"
			},
			"ForEachCountryVariable": {
				"type": "String"
			},
			"Country": {
				"type": "String"
			}
		},
		"folder": {
			"name": "ADF Activities"
		},
		"annotations": [],
		"lastPublishTime": "2025-05-27T20:06:32Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}